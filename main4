provider "google" {
  project = var.project_id
  region  = "europe-west2"
  zone    = "europe-west2-b"
}

# Define all regions and zones for redundancy
variable "regions" {
  type    = list(string)
  default = ["europe-west2", "us-central1", "asia-southeast1"] # Add more as needed
}

variable "zones" {
  type    = list(string)
  default = ["europe-west2-b", "us-central1-a", "asia-southeast1-b"] # Add more as needed
}

# Log-based Metric
resource "google_logging_metric" "log_based_metrics" {
  name        = "log_based_metrics"
  description = "Track critical error logs for xMatters"
  
  # Filtering logs with severity ERROR or CRITICAL
  filter = "resource.type=\"gce_instance\" AND severity >= ERROR"

  metric_descriptor {
    metric_kind = "DELTA"
    value_type  = "INT64"
  }
}

# xMatters Webhook Notification Channel
resource "google_monitoring_notification_channel" "xmatters_webhook" {
  display_name = "xMatters Webhook"
  type         = "webhook_tokenauth"

  labels = {
    url = var.xmatters_webhook_url # Replace with your xMatters webhook URL
  }
}

# Alert Policy for Log-Based Metrics and Security Events
resource "google_monitoring_alert_policy" "log_metric_alert_policy" {
  display_name = "Log-Based Metric Alert Policy"
  combiner     = "OR"

  conditions {
    display_name = "Condition: Log Metric Severity ERROR"

    condition_threshold {
      filter     = <<EOT
        resource.type="gce_instance" AND metric.type="logging.googleapis.com/user/${google_logging_metric.log_based_metrics.name}"
      EOT
      comparison      = "COMPARISON_GT"
      threshold_value = 1 # Trigger alert if count exceeds 1
      duration        = "60s"

      aggregations {
        alignment_period   = "60s"
        per_series_aligner = "ALIGN_RATE"
      }
    }
  }

  conditions {
    display_name = "Condition: High CPU Usage"

    condition_threshold {
      filter     = <<EOT
        resource.type="gce_instance" AND metric.type = "compute.googleapis.com/instance/cpu/utilization"
      EOT
      comparison      = "COMPARISON_GT"
      threshold_value = 0.8 # Trigger alert if CPU usage exceeds 80%
      duration        = "120s"

      aggregations {
        alignment_period   = "120s"
        per_series_aligner = "ALIGN_MEAN"
      }
    }
  }

  conditions {
    display_name = "Condition: Unauthorized Authentication Attempt"

    condition_threshold {
      filter     = <<EOT
        resource.type="gce_instance" AND logName = "projects/${var.project_id}/logs/cloudaudit.googleapis.com%2Factivity"
        AND protoPayload.status.code = 7
      EOT
      comparison      = "COMPARISON_GT"
      threshold_value = 1 # Alert if unauthorized access attempts exceed 1
      duration        = "60s"

      aggregations {
        alignment_period   = "60s"
        per_series_aligner = "ALIGN_RATE"
      }
    }
  }

  notification_channels = [google_monitoring_notification_channel.xmatters_webhook.id]
}
